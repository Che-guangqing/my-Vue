{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parserHtml.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 当前数据是否是对象\nexport function isObject(data) {\n    return typeof data === 'object' && data !== null\n}\n\n// 定义一个不可枚举但是可读的属性\nexport function def(data,key,value) {\n    Object.defineProperty(data, key, {\n        enumerable:false,   //不可枚举\n        configurable:false, //不能被修改\n        value\n    })\n}","// 需要重写能够改变原数组的方法 push shift unshift pop reverse sort splice\n// slice不会改变原数组不需要劫持\n\n// 先把数组原来的方法保存\nlet oldArraryMethods = Array.prototype\n// arr.__proto__ = arraryMethods 用户使用\n// arraryMethods.__proto__ = oldArraryMethods\n// 使用方法时：原型链查找，先查找重写的，在重写的方法中找不到，会继续向上查找\nexport const arraryMethods = Object.create(oldArraryMethods)\nconst methods = [\n    'push', \n    'shift',\n    'unshift' ,\n    'pop' ,\n    'reverse' ,\n    'sort' ,\n    'splice'\n]\nmethods.forEach(methods => {\n    arraryMethods[methods] = function (...args) {\n        console.log(`调用了${methods}方法`)\n        // 我调用重写的数组方法 这个方法调用原生的数组方法   AOP切片编程\n        // 这里的this，就是谁调用的方法就指向谁，也就是Observe中的value调用的\n        const result = oldArraryMethods[methods].apply(this, args)\n\n        // push unshif方法，添加的元素可能还是对象，要继续监听\n        //当前用户插入的元素\n        let inserted;\n        let ob = this.__ob__\n        // console.log(ob, 'arrrr')\n\n        switch (methods) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                // arr.push({a:1},{b:2})\n                // inserted = [{a:1},{b:2}]\n                break;\n            case 'splice': //有删除、修改、新增功能 (操作的数组元素,操作的索引,新增的属性) arr.splice(0,1,'b')\n               // 对于splice新增的属性也要看\n                inserted = args.slice(2)\n                break;\n        }\n        // console.log(inserted, '当前用户插入的元素')\n        // 添加了值\n        if(inserted) {\n            // 观测inserted数组\n            // 要使用index.js中循环数组元素监测的方法\n            ob.observeArray(inserted) //将新增属性继续观测\n        } \n\n        return result\n    }\n})","import {isObject, def} from '../util/index'\nimport {arraryMethods} from './array'\n\n// 观测数据\nclass Observe {\n    constructor(value) {\n        // console.log(value)\n        // vue如果数据层次过多 则递归解析对象中的属性 ，依次添加set get方法\n\n        // 给每一个监控过的对象都添加一个__ob__属性，但是这样写会一直递归调用observeArray方法\n        // value.__ob__ = this\n\n        // Object.defineProperty(value, '__ob__', {\n        //     enumerable:false,   //不可枚举\n        //     configurable:false, //不能被修改\n        //     value: this\n        // })\n        def(value,'__ob__',this)\n\n        if(Array.isArray(value)) {\n            // 如果属性是数组,则不使用数组的索引添加get set进行观察、性能不好 \n            // push shift unshift pop reverse sort splice这些方法也能使原数组发生变化\n            // 所以对于这些方法让数组发生变化，也需要知道他变了去通知视图改变，则重写这些方法\n            value.__proto__ = arraryMethods\n            \n            // 如果数组里面是对象[{}]我再进行监测\n            this.observeArray(value)\n        }else {\n            //对对象进行观测\n            this.walk(value)\n        }\n    }\n    //遍历数组\n    observeArray(value) {\n        for(let i = 0 ;i < value.length; i++) {\n            // [{}] 监控了数组里面的对象\n            observe(value[i])\n        }\n    }\n    //遍历对象\n    walk(data) {\n        let keys = Object.keys(data) // [name,age,address]\n        keys.forEach(key => {\n            defineReactive(data, key, data[key])\n        })\n        // for(let i = 0 ;i <keys.length; i++) {\n        //     // 遍历拿到对象中的属性和值 \n        //     let key = keys[i]\n        //     let value =  data[key]\n        //     // 给每个属性定义响应式数据\n        //     defineReactive(data, key, value)\n        // }\n    }\n}\n\n// 定义响应式数据\nfunction defineReactive(data, key, value) {\n    //                (给谁，定义某个key，值是多少)\n    // 递归实现深度监测 如果对象里面还是对象，不递归只能监测一层数据的变化 用observe方法再判断再循环属性添加set get方法\n    observe(value)\n\n    Object.defineProperty(data, key , {\n        //取值\n        get() {\n            return value\n        },\n        //设置值\n        set(newValue) {\n            console.log('更新数据')\n            if (value === newValue) return;\n            // 值发生变化\n\n            // 如果原来的属性是a:{b:1,c:2} 用户这样赋值 a:{a:2}还是监测不到\n            // 继续劫持用户设置的值 因为有可能用户设置的值是对象 对象劫持\n            observe(newValue)\n\n            // console.log('值发生变化')\n            value = newValue\n        }\n    })\n}\n\n\n\n// 响应式原理 观测数据是否变化\n// 把data中的数据都使用 Object.definedProperty()重新定义\nexport function observe(data) {\n    // console.log(data, 'observe')\n    let isObj = isObject(data) //是否对象\n    // console.log(isObj)\n    //不是对象\n    if(!isObj) { return }\n    // 是对象\n    return new Observe(data) //用来观测数据\n}","import {observe} from './observe/index'\nexport function initState(vm) {\n    const opts = vm.$options\n    // vue的数据来源 属性 方法 数据 计算属性 watch\n    if(opts.props) {\n        initProps(vm)\n    }\n    if(opts.methods) {\n        initMethods(vm)\n    }\n    if(opts.data) {\n        initData(vm)\n    }\n    if(opts.computed) {\n        initComputed(vm)\n    }\n    if(opts.watch) {\n        initWatch(vm)\n    }\n}\nfunction initProps() {}\nfunction initMethods() {}\nfunction initData(vm) {\n    // console.log(vm.$options.data)\n    // 数据初始化\n\n    //用户传递的data 可能是对象或函数\n    let data = vm.$options.data;\n    // 如果拿到的值是函数 就执行它 并且this指向vue实例 并且为了让用户拿到data去修改等操作 把data放在vue实例上\n    data = vm._data = typeof data === 'function' ? data.call(vm):data\n    // console.log(data) //对象data\n\n    // 对象劫持  用户改变了数据 我可以收到通知进行刷新页面（数据可以驱动视图变化）\n    // Object. ()  给属性添加get、set方法\n    observe(data) //响应式原理\n}\nfunction initComputed() {}\nfunction initWatch() {}\n","// ?:  匹配不捕获\n\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\n// console.log(`aaa = '123'`.match(attribute))\nconst ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*'    // abc-aa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`  // <aaa:bfsf>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)   // 标签开头的正则 捕获的内容是标签名\nconst startTagClose = /^\\s*(\\/?)>/  // 匹配标签结束的 <div />\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)  // </xxx> 标签结尾\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  // {{}}\n\n// ast语法树树根\nlet root = null;\n// 保存当前标签的父级\nlet currentParent;\n// 每次匹配到后入栈，当遇到结束标签查看与上一个是否匹配，匹配两个一起出栈 [div, p, /p] p结束 => [div, /div] => [] div结束, 若最后栈中还有则不符合规范 \nlet stack = [];\n// 标签元素\nconst ELEMENT_TYPE = 1\n// 文本元素\nconst TEXT_TYPE = 3\n\n// 创建AST树\nfunction createASTElement(tagName,attrs) {\n    return {\n        tag: tagName,\n        type: ELEMENT_TYPE,\n        children: [],\n        attrs,\n        parent:null\n    }\n}\n\n\nfunction start(tagName, attrs) {\n    // console.log('开始标签:',tagName, '属性是:',attrs)\n    // 遇到开始标签，就创建一个ast元素\n    let element = createASTElement(tagName, attrs)\n    if(!root) {\n        root = element;\n    }\n    // 把当前元素标记成父ast树\n    currentParent = element\n    // 将当前标签存入栈中\n    stack.push(element)\n}\n// 空格字符或者文本\nfunction chars(text) {\n    // console.log('文本是:',text)\n    // 空\n    text = text.replace(/\\s/g, '')\n    if(text) {\n        currentParent.children.push({\n            text,\n            type:TEXT_TYPE\n        })\n    }\n}\n// <div><p>  [div,p]\nfunction end(tagName) {\n    // console.log('结尾标签:',tagName)\n    // 比较栈中最后一个元素和当前元素是否匹配\n    // 得到的是ast对象\n    let element = stack.pop();\n    // 标识当前这个p是属于这个div的儿子的\n    currentParent = stack[stack.length-1]\n    if(currentParent) { \n        // 有父级\n        element.parent = currentParent;\n        currentParent.children.push(element); //实现树的父子关系\n    }\n}\n\n\n// 匹配字符串 html => ast树\nexport function parseHTML(html) {\n    // 不停的解析html字符串\n    while(html) {\n        let textEnd = html.indexOf('<');\n        if(textEnd == 0) {\n            // 若当前索引为0，肯定是标签，要么开始标签，要么结束标签\n            // 通过此方法获取匹配结果，标签名和属性\n            let startTagMatch = parseStartTag()\n            // 若匹配到开始\n            if(startTagMatch) {\n                // （1）解析开始标签\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                // console.log(startTagMatch)\n                // 如果开始标签匹配完毕，继续下一次匹配\n                continue\n            }\n\n            // 不走上面if，就是结尾标签\n            let endTagMatch = html.match(endTag)\n            // 若匹配到结尾\n            if(endTagMatch) {\n                advance(endTagMatch[0].length);\n                // （3）解析结束标签\n                end(endTagMatch[1])\n                continue\n            }\n        }\n\n        let text;\n        if(textEnd >= 0) {\n            // 文本\n            text = html.substring(0,textEnd)\n        }\n        if(text) {\n            advance(text.length)\n            // （2）解析文本标签\n            chars(text)\n        }\n    }\n\n    // <div>jfck</div>\n    // 匹配到<div>，就删掉<div>,向后继续截取\n    function advance(n) {\n        html = html.substring(n)\n    }\n\n    // 解析开始标签\n    function parseStartTag() {\n        let start = html.match(startTagOpen);\n        if(start) {\n            const match = {\n                tagName : start[1],\n                attrs: []\n            }\n\n            // 匹配到就在原html中删除, 删除标签\n            advance(start[0].length)\n\n            // 匹配结束标签\n            let end,attr;\n            // 匹配不到标签结束 /> \n            while(!(end = html.match(startTagClose)) &&  (attr = html.match(attribute)) ) {\n                // 将属性去掉\n                advance(attr[0].length)\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                })\n            }\n\n            // 就是匹配到上一步 去掉开始标签的 >\n            if(end) {\n                advance(end[0].length)\n                return match\n            }\n            // console.log(html, match)\n\n            // console.log(start)\n            // console.log(html)\n        }\n    }\n    return root\n}","// ast语法树: 用对象来描述编译原生语法\n// 区别于虚拟dom: 用对象来描述dom节点\n\nimport {parseHTML} from './parserHtml'\nconst  defaultTagRE  = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  // {{}}\n\n// 处理属性 \nfunction genProps(attrs) {\n    // [{name:'id',value:'app'}, {}]  => {id:app,a:1,b:2}\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        const attr = attrs[i];\n        if(attr.name === 'style') {\n            // style=\"color: red ; fontSize:14px\" => {style: {color:'red'},id:app,}\n            let obj = {}\n            attr.value.split(\";\").forEach(item => {\n                let [key, value] = item.split(':')\n                obj[key] = value\n                // console.log(obj)\n            });\n            attr.value = obj\n        }\n        str+= `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    // 包装成对象，去掉最后的逗号\n    return `{${str.slice(0,-1)}}`\n}\n\n// 孩子节点处理 递归！\nfunction genChildren(el) {\n    let children = el.children\n    if(children && children.length > 0 ) {\n        // _c('span),_c('span),_c('span)\n        return `${children.map(c => gen(c)).join(',')}`\n    }else {\n        return false\n    }\n}\nfunction gen(node) {\n    // node: 遍历children拿到的一个个节点对象\n    if(node.type == 1) {\n        // 元素标签\n        return generate(node)\n    }else {\n        // 文本节点\n        let text = node.text\n        // a {{name}} b{{age}} c => _v(\"a\" + _s(name) + \"b\" +_s(age) + c)\n        // let reg = /a/g => reg.test('abc') true => reg.test('abc') false => reg.lastIndex = 0 => reg.test('abc') true\n        // esec 正则的问题 lastIndex\n\n        \n        // 难难难！！！ 没理解\n        let tokens = []; //匹配到的{{name}}元素\n        let match,index\n        // 每次的偏移量\n        let lastIndex =  defaultTagRE.lastIndex = 0\n        while(match = defaultTagRE.exec(text)) {\n            index = match.index\n            if(index > lastIndex) {\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index + match[0].length\n        }\n        if(lastIndex < text.length) {\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        return `_v(${tokens.join('+')})`\n    }\n\n}\n \n// 标签\nfunction generate(el) {\n    // 生成孩子\n    let children = genChildren(el)\n    let code = `_c(\"${el.tag}\", ${\n        el.attrs.length ? genProps(el.attrs) : 'undefined'\n    }${\n        children ? `, ${children} ` : ''\n    })\n    `\n    return code\n}\n\nexport function compileToFunction(template) {\n    // console.log(template)\n    // <1>、解析html,把html字符串变成ast语法树  (正则匹配HTML标签属性文本 + 循环)\n    let root = parseHTML(template)\n    // console.log(root)\n\n\n    let code = generate(root)\n    // console.log(code)\n    // 将ast语法树生成最终的render函数  就是字符串拼接（模板引擎）\n    // render函数返回的是虚拟dom\n\n    // 核心思路：将模板转换成下面字符串\n    // <div id=\"app\">\n    //     <h1>hello {{name}}</h1>\n    //     hello\n    // </div>\n    // 将ast树再次转换成js语法\n    // _c('div',{id:app}, _c(\"p\",udefined,_v('hello' + _s(name) )),  _v('hello))\n\n    // 所有的模板引擎实现 都要new Function + with\n    let renderFn = new Function(`with(this) {return ${code}}`)\n    // 相当于\n    // function () {\n    //     with(this) {\n    //         return _c('div',{id:app}, _c(\"p\",udefined,_v('hello' + _s(name) )),  _v('hello))\n    //     }\n    // }\n    console.log(renderFn)\n    return renderFn\n}\n\n\n// 先把html字符串转成AST语法树，再把ast语法树转成render函数\n\n/*\n<div id=\"app\">\n    <h1>hello</h1>\n</div>\n\n// AST抽象语法树\nlet root = {\n    tag: 'div',\n    attrs: [\n        { name: 'id', value: 'app' }\n    ],\n    parent: null,\n    type:1,\n    children: [\n        {\n            tag: 'p',\n            attrs: [],\n            parent: root,\n            type:1,\n            children: [\n                { text: 'hello', type:3 }\n            ]\n        }\n    ]\n}\n*/\n\n// 拼接字符串 + with + new Function","import {initState} from './state'\nimport {compileToFunction} from './compiler/index.js'\n\n// 在Vue构造函数的原型上添加初始化init方法\nexport function initMixin(Vue) {\n    // 初始化流程\n    Vue.prototype._init = function(options) {\n        // console.log(this) //Vue实例\n        // 数据劫持\n        const vm = this; // vue实例\n        // this.$options = 用户传入的配置参数\n        vm.$options = options;\n\n        // 初始化状态\n        initState(vm);\n\n        // 若传入了el属性 需要将页面渲染出来 实现挂载流程\n        if(vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n    }\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options\n        el = document.querySelector(el);\n        // console.log(el)\n\n        // 默认优先级 render, template, el\n        if(!options.render) {\n            // 对模板进行编译\n            let template = options.template\n\n            //   并且有 el\n            if(!template && el) {\n                template = el.outerHTML\n            }\n            // console.log(template, 'outerHTML')\n\n            // 将template转换成render方法 AST语法树\n            const render = compileToFunction(template);\n            options.render = render\n        }\n        // 传了render函数用传的，没传用if里面编译后的\n        // options.render\n    }\n}\n\n/*\n<div id=\"app\">\n    <h1>{{name}}</h1>\n    <h3>{{age}}</h3>\n</div>\nrender函数\nrender() {\n    return _c('div', {id:'app'}, _c('h1',undefined, _v(_s(name))), _c('h3',undefined,_v(_s())))\n}\n*/","import {initMixin} from './init'\n\nfunction Vue(options) {\n    // vue初始化操作\n    this._init(options)\n}\n\n// 通过引入文件的方式给Vue原型上添加方法\n// 导入init方法 \ninitMixin(Vue)\n\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArraryMethods","Array","prototype","arraryMethods","create","methods","forEach","console","log","args","result","apply","inserted","ob","__ob__","slice","observeArray","Observe","isArray","__proto__","walk","i","length","observe","keys","defineReactive","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","chars","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","split","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","initMixin","Vue","_init","options","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}